plugins {
    id 'net.minecraftforge.gradle' version '6.0.+'
    id 'wtf.gofancy.fancygradle' version '1.1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
}

fancyGradle {
    patches {
        resources
        coremods
        asm
        mergetool
    }
}


version = "${project.minecraft_version}-${project.mod_version}"
group = project.maven_group
archivesBaseName = project.base_name

java.toolchain.getLanguageVersion().set(JavaLanguageVersion.of(8))

minecraft {
    mappings channel: 'stable', version: mappings_version
    accessTransformer = file('src/main/resources/META-INF/specifiedspawning_at.cfg')
    runs {
        def args = [
                '-Dmixin.debug.export=true',
                '-Dmixin.hotSwap=true',
                '-Dmixin.checks.interfaces=true'
        ]
        client {
            workingDirectory file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            jvmArgs args
        }

        server {
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            jvmArgs args
        }
    }
}

repositories {
    maven {
        url = 'https://www.cursemaven.com'
        content {
            includeGroup 'curse.maven'
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"

    //required
    implementation(fg.deobf("curse.maven:theimpossiblelibrary-661115:${project.lib_version}"))

    //supported
    implementation(fg.deobf("curse.maven:game-stages-268655:${project.gamestages_version}"))
    implementation(fg.deobf("curse.maven:musictriggers-518410:${project.musictriggers_version}"))
    implementation(fg.deobf("curse.maven:nyx-349214:${project.nyx_version}"))
    implementation(fg.deobf("curse.maven:scaling-health-248027:${project.scalinghealth_version}"))

    //don't need these to compile
    runtimeOnly(fg.deobf("curse.maven:bookshelf-228525:${project.bookshelf_version}"))
    runtimeOnly(fg.deobf("curse.maven:had-enough-items-557549:${project.hei_version}"))

    //mixin stuff
    implementation(fg.deobf("curse.maven:mixin-booter-419286:${project.mixinbooter_version}"))
    annotationProcessor "org.spongepowered:mixin:${project.mixin_version}:processor"
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    inputs.property "version", project.version
    inputs.property "mcversion", minecraft_version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': minecraft_version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

mixin {
    add sourceSets.main, "specifiedspawning.refmap.json"
}

jar {
    manifest {
        attributes([
                'Specification-Version'   : project.version,
                'Implementation-Title'    : project.name,
                'FMLCorePlugin': 'mods.thecomputerizer.specifiedspawning.core.MixinPlugin',
                'FMLCorePluginContainsFMLMod': 'true',
                'ForceLoadAsMod': 'false',
                'FMLAT': 'specifiedspawning_at.cfg',

        ])
    }
}